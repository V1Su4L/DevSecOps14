pipeline{
    agent {
                docker{
                    image 'ubuntu:latest'
                }
            }
    environment {
        REPO_URL= 'https://github.com/devopsPRO27/Docker-exercise-3'
        IMAGE_NAME= 'resume'
        DIR_NAME='Docker-exercise-3'
        TAG= "V1.${BUILD_NUMBER}"
        CONTAINER_NAME= 'sorry'
        REGISTRY= 'hub.docker.com'
        ACCOUNT_NAME= 'liorlazar/resume'
        DOCKERHUB_CREDENIALS = credentials('Docker')
        // DOCKERHUB_CREDENIALS_USR
        // DOCKERHUB_CREDENIALS_PSW

    }
    stages{
        stage("Clone"){
            agent {
                docker{
                    image'node:alpine'
                }
            }
            steps{
                sh 'git clone ${REPO_URL}'
                sh 'pwd'
                sh 'find .'
            }
        
        }
        stage("Build"){
            steps{
                dir('Docker-exercise-3/ResumeMaker/'){
                    sh 'docker build -t ${IMAGE_NAME}:${TAG} --file ../../jenkins6/docker_agents/Dockerfile .'
                    sh 'docker images'
                }
            }
        
        }
        stage("Test"){
            
            steps{
                sh 'git clone '
                sh 'uname'
                sh 'uname -m'
            }
        
        }
        stage("Login to DockerHub"){
            steps{
                sh 'echo ${DOCKERHUB_CREDENIALS_USR}'
                sh "echo ${DOCKERHUB_CREDENIALS_PSW} | docker login -u ${DOCKERHUB_CREDENIALS_USR} --password-stdin "
            }
        
        }
        stage("Push Image"){
            steps{
                sh "docker tag ${IMAGE_NAME}:${TAG} ${ACCOUNT_NAME}:${TAG}"
                sh "docker images"
                sh "docker push ${ACCOUNT_NAME}:${TAG}" 
            }
        
        }
    }
    post{
        always{
            sh 'rm -fr ${DIR_NAME}'
            sh 'docker rmi -f $(docker images -qa)'
            sh 'docker logout' 
        }
        success{
            echo "========pipeline executed successfully ========"
        }
        failure{
            echo "========pipeline execution failed========"
        }
    }
}